version: 2
jobs:
  build:
    parallelism: 1
    working_directory: ~/repo
    docker:
      - image: circleci/ruby:2.4-node
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
      - image: circleci/mysql:5.7
        environment:
          MYSQL_DATABASE: to_wa_test_database
    steps:
      - checkout

      - run:
          name:  Download cc-test-reporter
          command: |
            mkdir -p tmp/
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
            chmod +x ./tmp/cc-test-reporter

      # Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v

      # Restore bundle cache
      - restore_cache:
          keys:
            - to_wa-bundle-v2-{{ checksum "Gemfile.lock" }}
            - to_wa-bundle-v2-

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      # Store bundle cache
      - save_cache:
          key: to_wa-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:3306 -timeout 1m

      - run:
          name: Database setup
          command: bundle exec ruby ./db/preparation.rb

      # Run rspec in parallel
      - type: shell
        command: |
          bundle exec rspec -cfd \
                            $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
          ./tmp/cc-test-reporter format-coverage -t simplecov -o tmp/codeclimate.json coverage/.resultset.json

      - run:
          name: Upload coverage results to Code Climate
          command: |
            ./tmp/cc-test-reporter upload-coverage -i tmp/codeclimate.json
